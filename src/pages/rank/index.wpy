<template lang="pug">
  view.container
    swiper.swiper(
      previous-margin="60rpx"
      next-margin="60rpx"
      @change="change"
      @animationfinish="animationfinish")
      swiper-item.swiper_item
        view.card_wrapper(
          class="{{isScale ? 'not_scale' : 'scale'}}"
        )
          view.rank_self
            image.avatar(src="{{avatarUrl ? avatarUrl : '../../images/avatar-default.svg' }}")
            view.ranking 您目前实时排名：
              text.ranking_score {{personalSort}}
              text.unit  位
          scroll-view.rank_others(
            scroll-y)
            repeat(
              for="{{personalList}}"
              key="index")
              view.rank_item
                view.rank_item-left
                  view.number {{index + 1}}.
                  image.avatar(
                    src="{{item.user.avatarUrl ? item.user.avatarUrl : '../../images/avatar-default.svg'}}")
                  view.nickname {{item.user.nickName}}
                view.rank_item-right
                  text.score {{item.score}}
                  text.unit 分
      swiper-item.swiper_item
        view.card_wrapper(
          class="{{isScale ? 'scale' : 'not_scale'}}"
        )
          view.rank_self
            image.avatar(src="{{avatarUrl ? avatarUrl : '../../images/avatar-default.svg' }}")
            view.ranking 您所在机构排名：
              text.ranking_score {{hpSort}}
              text.unit  位
          scroll-view.rank_others(
            scroll-y)
            repeat(
              for="{{hpList}}"
              key="index")
              view.rank_item
                view.rank_item-left
                  view.number {{index + 1}}.
                  view.hp_name {{item.name}}
                view.rank_item-right
                  text.score {{item.score}}
                  text.unit 分
  </template>

<script>
  import wepy from 'wepy'
  import { postPersonalRank, postHospitalRank } from '@/utils/api'

  export default class RankPage extends wepy.page {
    config = {
      navigationBarTitleText: '排行榜'
    }

    data = {
      pid: '',
      isScale: true,
      current: 0,
      personalSort: 0,                 // 当前个人排名
      personalList: [],                // 个人排名列表
      avatarUrl: '',                   // 当前用户头像
      hpList: [],                      // 医院排名列表
      hpSort: 0,                       // 个人所在机构排名
    }

    methods = {
      change (e) {
        let { current } = e.detail
        if (current > this.current) {
          this.current = current
          this.isScale = false
        } else {
          this.current = current
          this.isScale = true
        }
      },
      animationfinish () {}
    }

    async onLoad ({ pid = '5ac5742de9c0467416467691' }) {
      try {
        // person '5ac5742de9c0467416467691'
        // hp '5ac97220e9c0460881538d21'
        this.avatarUrl = wepy.getStorageSync('userInfo').avatarUrl
        let params = {
          method: 'POST',
          data: { pid }
        }
        let { data: { sort, list: { data: list } } } = await postPersonalRank(params)
        this.personalList = list
        this.personalSort = sort
        let { data: { my_hp, hp: { data: hpList } } } = await postHospitalRank(params)
        this.hpList = hpList
        this.hpSort = my_hp
        this.$apply()
      } catch (error) {
        wepy.showToast({
          title: '数据加载失败',
          icon: 'none'
        })
      }
    }
  }
</script>

<style lang="scss">
@import '../../scss/_layout.scss';

.unit {
  font-family: PingFangSC-Semibold;
  font-size: 28rpx;
  color: #39393a;
}
page,
.container {
  width: 100vw;
  height: 100vh;
}

.container {
  @include verticalHorizontalCenter();
  background: linear-gradient(to bottom right, #3023AE, #C86DD7 );
}

.swiper {
  width: 100%;
  height: 100%;

  .swiper_item {
    display: flex;
    align-items: center;
    justify-content: center;

    .scale {
      transform: scale(0.9);
      transition: transform 0.6s ease-in-out;
    }

    .not_scale {
      transform: scale(1);
      transition: transform 0.6s ease-in-out;
    }
  }
}

.card_wrapper {
  position: relative;
  width: 610rpx;
  height: 1080rpx;
  box-sizing: border-box;
  border-radius: 40rpx;
  background: #fff;
  padding: 20rpx;
  /* box-shadow: 0 4rpx 60rpx 0 rgba(0, 0, 0, 0.2); */

  &:after {
    content: '';
    position: absolute;
    left: 50%;
    bottom: 0;
    z-index: -99;
    margin-left: -250rpx;
    width: 450rpx;
    height: 10rpx;
    box-shadow: 0 30rpx 40rpx 0 rgba(0, 0, 0, 0.2);
  }
}

.rank_self {
  height: 200rpx;
  box-sizing: border-box;
  border-bottom: 2rpx #D7D8D7 solid;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 40rpx;
  margin-bottom: 20rpx;

  .avatar {
    width: 100rpx;
    height: 100rpx;
    border-radius: 50%;
  }

  .ranking {
    font-family: PingFangSC-Semibold;
    font-size: 28rpx;
    color: #39393a;

    .ranking_score {
      font-family: DINCondensed-Bold;
      color: #bf00e3;
      font-size: 40rpx;
    }
  }
}

.rank_others {
  box-sizing: border-box;
  height: 800rpx;
  padding-top: 10rpx;

  .rank_item {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    height: 80rpx;
    margin: 0 20rpx;
    box-sizing: border-box;
    font-family: PingFangSC-Regular;
    font-size: 28rpx;
    color:#4a4a4a;

    .number,
    .score {
      font-family: DINCondensed-Bold;
      color: #bf00e3;
      font-size: 40rpx;
    }
    .number{
      width: 60rpx;
      margin-right: 20rpx;
    }

    .nickname {
      width: 300rpx;
    }

    .hp_name {
      width: 342rpx;
    }
    .score {
      margin-right: 10rpx;
    }
  }
}

.rank_item-left {
  display: flex;
  align-items: center;

  .avatar {
    width: 60rpx;
    height: 60rpx;
    border-radius: 50%;
    margin-right: 20rpx;
  }
}
</style>
