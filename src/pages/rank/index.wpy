<template lang="pug">
  view.container
    swiper.swiper(
      previous-margin="60rpx"
      next-margin="60rpx"
      @change="change"
      @animationfinish="animationfinish")
      swiper-item.swiper_item
        view.card_wrapper(
          class="{{current === 0 ? 'not_scale' : 'scale'}}")
          view.rank_person_top3
            block(
              wx:for="{{personalListTopThree}}"
              wx:key="{{index}}")
              view.rank_person_top3_item
                view.avatar_block
                  image.avatar(
                    src="{{item.user.avatarUrl ? item.user.avatarUrl : '../../images/avatar-default.svg'}}")
                  image.crown(
                    src="{{item.crownSrc}}")
                  image.star1(
                    wx:if="{{index === 0}}"
                    src="../../images/star.svg")
                  image.star2(
                    wx:if="{{index === 0}}"
                    src="../../images/star.svg")
                  image.star3(
                    wx:if="{{index === 0}}"
                    src="../../images/star.svg")
                  view.medal
                    view.medal_placeholder {{index + 1}}
                view.nickname {{item.user.nickName}}
                viwe.score  {{item.score}}分
          scroll-view.rank_list.rank_list_person(
            scroll-y)
            repeat(
              for="{{personalList}}"
              key="index")
              view.rank_item(
                wx:if="{{index > 2}}")
                view.rank_item-left
                  view.number {{index + 1}}.
                  image.avatar(
                    src="{{item.user.avatarUrl ? item.user.avatarUrl : '../../images/avatar-default.svg'}}")
                  view.nickname {{item.user.nickName}}
                view.rank_item-right
                  text.score {{item.score}}
                  text.unit 分
      swiper-item.swiper_item
        view.card_wrapper(
          class="{{current === 1 ? 'not_scale' : 'scale'}}")
          scroll-view.rank_list.rank_list_hp(
            scroll-y)
            repeat(
              for="{{hpList}}"
              key="index")
              view.rank_item
                view.rank_item-left
                  view.number
                    view.medal_placeholder {{index > 2 ? index + 1 + '.' : index + 1}}
                  view.hp_name {{item.name}}
                view.rank_item-right
                  text.score {{item.score}}
                  text.unit 分
      swiper-item.swiper_item
        view.card_wrapper(
          class="{{current === 2 ? 'not_scale' : 'scale'}}")
          scroll-view.rank_list.rank_list_hp(
            scroll-y)
            repeat(
              for="{{goldList}}"
              key="index")
              view.rank_item
                view.rank_item-left
                  view.number
                    view.medal_placeholder {{index > 2 ? index + 1 + '.' : index + 1}}
                  image.avatar(
                    src="{{item.user.avatarUrl ? item.user.avatarUrl : '../../images/avatar-default.svg'}}")
                  view.hp_name {{item.user.nickName}}
                view.rank_item-right.gold_item-right
                  text.score {{item.gold}}
                  text.unit 金币
</template>

<script>
  import wepy from 'wepy'
  import { postPersonalRank, postHospitalRank, postGuessRank } from '@/utils/api'

  export default class RankPage extends wepy.page {
    config = {
      navigationBarTitleText: '排行榜'
    }

    data = {
      pid: '',
      current: 0,
      personalListTopThree: [],
      personalSort: 0,                 // 当前个人排名
      personalList: [],                // 个人排名列表
      avatarUrl: '',                   // 当前用户头像
      hpList: [],                      // 医院排名列表
      hpSort: 0,                       // 个人所在机构排名
      goldList: [],                    // 金币排行列表
    }

    methods = {
      change (e) {
        let { current } = e.detail
        this.current = current
      },
      animationfinish () {}
    }

    async onLoad ({ pid = '' }) {
      try {
        this.avatarUrl = wepy.getStorageSync('userInfo').avatarUrl
        let params = {
          method: 'POST',
          data: { pid }
        }

        let { data: { sort, list: { data: list } } } = await postPersonalRank(params)
        this.personalListTopThree = list.slice(0, 3).map((item, index) => {
          item.crownSrc = `../../images/crown${index + 1}.svg`
          return item
        })
        this.personalList = list
        this.personalSort = sort

        let { data: { my_hp, hp: { data: hpList } } } = await postHospitalRank(params)
        this.hpList = hpList
        this.hpSort = my_hp

        let { data: { list: goldList } } = await postGuessRank({ method: 'POST' })
        this.goldList = goldList

        this.$apply()
      } catch (error) {
        wepy.showToast({
          title: '数据加载失败',
          icon: 'none'
        })
      }
    }

    onShareAppMessage () {
      let { share_uid = '' } = { share_uid: wepy.getStorageSync('uid') }
      return {
        title: '参与医学知识竞答，赢现金大奖！',
        path: `/pages/home/home?share_uid=${share_uid}`,
        success: (res) => {
          this.$apply()
          wepy.showToast({
            title: '分享成功'
          })
        },
        fail: () => {
          this.$apply()
          wepy.showToast({
            title: '分享失败',
            icon: 'none'
          })
        }
      }
    }
  }
</script>

<style lang="scss">
@import '../../scss/_layout.scss';
@import '../../scss/_element.scss';

.unit {
  font-family: PingFangSC-Semibold;
  font-size: 28rpx;
  color: #39393a;
}
page,
.container {
  width: 100vw;
  height: 100vh;
}

.container {
  @include verticalHorizontalCenter();
  background: linear-gradient(to bottom right, #3023AE, #C86DD7 );
}

.swiper {
  width: 100%;
  height: 100%;

  .swiper_item {
    display: flex;
    align-items: center;
    justify-content: center;

    .scale {
      transform: scale(0.9);
      transition: transform 0.6s ease-in-out;
    }

    .not_scale {
      transform: scale(1);
      transition: transform 0.6s ease-in-out;
    }
  }
}

.card_wrapper {
  position: relative;
  width: 610rpx;
  height: 1080rpx;
  box-sizing: border-box;
  border-radius: 40rpx;
  background: #fff;
  overflow: hidden;

  &:after {
    content: '';
    position: absolute;
    left: 50%;
    bottom: 0;
    z-index: -99;
    margin-left: -250rpx;
    width: 450rpx;
    height: 10rpx;
    box-shadow: 0 30rpx 40rpx 0 rgba(0, 0, 0, 0.2);
  }
}

.rank_person_top3 {
  position: relative;
  display: flex;
  box-sizing: border-box;
  height: 430rpx;
  border-bottom: 2rpx solid #f0f0f0;

  .rank_person_top3_item {
    position: absolute;
    top: 0;
    width: 200rpx;
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    box-sizing: border-box;
    font-family: PingFangSC-Semibold;
    font-size: 24rpx;
    color: #8b572a;
    padding-top: 136rpx;

    &:nth-child(1) {
      left: 210rpx;
      padding-top: 60rpx;
      .avatar_block {
        background: linear-gradient(136deg,#ffd643 0%,#f7c136 43%,#e38813 100%);

        .star1,
        .star2,
        .star3 {
          position: absolute;
          width: 26rpx;
          height: 26rpx;
          transform: rotate(45deg);
        }

        .star1 {
          top: 26rpx;
          left: -26rpx;
        }

        .star2 {
          top: -30rpx;
          left: -10rpx;
          width: 50rpx;
          height: 50rpx;
        }

        .star3 {
          bottom: 0;
          right: -6rpx;
          transform: rotate(30deg);
        }
      }
    }

    &:nth-child(2) {
      float: left;
      padding-left: 44rpx;
      .avatar_block {
        background: linear-gradient(136deg,#b5b5b5 0%,#e4e4e4 100%);

        .medal {
          .medal_placeholder {
            background: #bababa;
            border: 10rpx solid #d3d3d3;
          }
        }
      }
    }

    &:nth-child(3) {
      right: 0;
      padding-right: 44rpx;
      .avatar_block {
        background: linear-gradient(140deg,#ffbe72 0%,	#d9621f 100%);

        .medal {
          .medal_placeholder {
            background: #e37b12;
            border: 10rpx solid #ff9129;
          }
        }
      }

    }

    .avatar_block {
      position: relative;
      display: flex;
      width: 146rpx;
      height: 146rpx;
      margin-bottom: 56rpx;
      border-radius: 50%;

      .avatar {
        margin: auto;
        box-sizing: border-box;
        width: 130rpx;
        height: 130rpx;
        border-radius: 50%;
      }

      .crown {
        width: 74rpx;
        height: 66rpx;
        position: absolute;
        right: -10rpx;
        top: -40rpx;
        z-index: -5;
        transform: rotate(30deg);
      }

      .medal {
        @include medal();
        position: absolute;
        top: 104rpx;
        left: 50%;
        margin-left: -30rpx;

        .medal_placeholder {
          display: flex;
          box-sizing: border-box;
          align-items: center;
          justify-content: center;
          width: 60rpx;
          height: 60rpx;
          border-radius: 50%;
          background: #ffcb54;
          border: 10rpx solid #f7be1f;
          position: absolute;
          top: -10rpx;
          left: -10rpx;
          z-index: 999;

          .number_content {
            margin: auto;
          }
        }
      }
    }
  }
}

.rank_list {
  box-sizing: border-box;

  .rank_item {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    height: 80rpx;
    margin: 0 20rpx;
    box-sizing: border-box;
    font-family: PingFangSC-Regular;
    font-size: 28rpx;
    color:#4a4a4a;

    .number{
      width: 60rpx;
      margin-right: 20rpx;
    }

    .nickname {
      width: 300rpx;
    }

    .hp_name {
      width: 342rpx;
    }
    .score {
      margin-right: 10rpx;
    }
  }
}

.rank_list_person {
  position: absolute;
  top: 430rpx;
  left: 0;
  width: 100%;
  height: 650rpx;

  .rank_item {
    height: 120rpx;
    margin: 0;
    padding: 0 20rpx 0 40rpx;
    border-bottom: 2rpx solid #f0f0f0;

    .number,
    .score {
      font-family: DINAlternate-Bold;
      font-size: 40rpx;
      color: #4a4a4a;
    }

    .score {
      font-size: 40rpx;
      color: #464f51;
    }
  }
}

.rank_list_hp {
  height: 100%;

  .rank_item {
    position: relative;
    height: 120rpx;
    margin: 0;
    padding: 0 20rpx 0 40rpx;
    border-bottom: 2rpx solid #f0f0f0;

    .avatar {
      width:60rpx;
      height:60rpx;
      border-radius:50%;
      margin-right:20rpx;
    }

    .number,
    .score {
      font-family: DINAlternate-Bold;
      font-size: 40rpx;
      color: #4a4a4a;
    }

    .score {
      font-size: 40rpx;
      color: #464f51;
    }
  }

  .rank_item:nth-child(1),
  .rank_item:nth-child(2),
  .rank_item:nth-child(3) {
    padding-left: 20rpx;

    .number {
      @include medal();
      margin-right: 40rpx;

      .medal_placeholder {
        display: flex;
        box-sizing: border-box;
        align-items: center;
        justify-content: center;
        width: 60rpx;
        height: 60rpx;
        border-radius: 50%;
        background: #ffcb54;
        border: 10rpx solid #f7be1f;
        position: absolute;
        top: -10rpx;
        left: -10rpx;
        z-index: 999;

        .number_content {
          margin: auto;
        }
      }
    }
  }

  .rank_item:nth-child(1) {
    height: 180rpx;
    background: linear-gradient(135deg,#ffe99c 0%,#fcc42d 100%);
  }

  .rank_item:nth-child(2) {
    background: linear-gradient(135deg,#b5b5b5 0%,#e4e4e4 100%);
    .number {
      .medal_placeholder {
        background: #bababa;
        border: 10rpx solid #d3d3d3;
      }
    }
  }

  .rank_item:nth-child(3) {
    background: linear-gradient(135deg,#ffbe72 0%,#ff833d 100%);
    .number {
      .medal_placeholder {
        background: #e37b12;
        border: 10rpx solid #ff9129;
      }
    }
  }
}

.rank_item-left {
  display: flex;
  align-items: center;

  .avatar {
    width: 60rpx;
    height: 60rpx;
    border-radius: 50%;
    margin-right: 20rpx;
  }
}

.gold_item-right {
  position: absolute;
  top: 50%;
  right: 20rpx;
  transform: translate(0, -50%);
}
</style>
