<template lang="pug">
  view.container
    view.profile_card_block
      view.userInfo_block
        image.avatar(
          src="{{userInfo.avatarUrl ? userInfo.avatarUrl : '../../images/avatar-default.svg'}}")
        text.nickname {{userInfo.nickName}}
      view.profile_block
        view.btn(
          @tap="toggleAllow") {{allow ? '允许推送': '关闭推送'}}
        view.designation
          text 级别：
          text.unit {{honor}}
        view.total_score
          text 总积分：
          text.unit {{total_score}}
    view.answer_info_block
      view.answer_info_wrapper
        view.answer_count_block
          view
            text 答题数：
            text.unit {{answerNum}}
        view.answer_accuracy_block
          view
            text 正确率：
            text.unit {{rightPercent}}%
    view.answer_analysis_block(
      @tap="goAnswerAnalysisPage")
      view.answer_analysis_wrapper
        image.answer_analysis_icon(
          src="/images/props4.svg")
        view.answer_analysis_tip
          text 查看上期答案解析
          text.saying 温故而知新
    button.btn(
      @tap="goInformationPage") 认证信息
    button.btn(
      @tap="goShareCardPage") 生成卡片
</template>

<script>
  import wepy from 'wepy'
  import { postAllow, getProfile, postShareCode, postShareInfo } from '@/utils/api'

  export default class RulePage extends wepy.page {
    config = {
      navigationBarTitleText: '个人中心',
      backgroundColor: '#fff'
    }

    data = {
      userInfo: {},
      honor: '',
      total_score: 0,
      answerNum: 0,
      rightPercent: 0,
      allow: 1
    }

    async onLoad (params) {
      let { data: { data } } = await getProfile()
      this.initData({ ...params, ...data })
    }

    methods = {
      goInformationPage () {
        wepy.navigateTo({
          url: `/pages/information/index`
        })
      },
      goAnswerAnalysisPage () {
        wepy.navigateTo({
          url: `/pages/answerAnalysis/index`
        })
      },
      goShareCardPage () {
        this.goShareCardPage()
      },
      async toggleAllow () {
        let res
        if (this.allow) {
          res = await postAllow({
            method: 'POST',
            data: { allow: 0 }
          })
          if (!res.data.error_code) {
            this.allow = 0
            this.$apply()
            wepy.showToast({
              title: '已关闭推送',
              icon: 'none'
            })
          }
          console.log('res close', res)
        } else {
          res = await postAllow({
            method: 'POST',
            data: { allow: 1 }
          })
          if (!res.data.error_code) {
            this.allow = 1
            this.$apply()
            wepy.showToast({
              title: '已允许推送',
              icon: 'none'
            })
          }
          console.log('res open', res)
        }
      }
    }

    initData (params) {
      let { honor, total_score, answer_num, right_percent, allow } = params
      this.allow = allow
      this.answerNum = answer_num
      this.rightPercent = (right_percent * 100).toFixed(2).toString()
      this.honor = honor
      this.total_score = total_score
      this.userInfo = wepy.getStorageSync('userInfo')
      this.$apply()
    }

    async goShareCardPage () {
      try {
        wepy.showLoading({
          title: '生成中',
          mask: true
        })
        let avatar_default = '../../images/avatar-default.png'
        let avatar_model = '../../images/avatar-model.png'
        let canvasbg = 'https://case.geekheal.net/codeImg/card.png'

        let { data: { url = '' } } = await postShareCode({ method: 'POST' })
        let { data: { slogan = '', all_bouns = 0, total_question = 0, avatar = '', dw = '' } } = await postShareInfo({ method: 'POST' })
        let { tempFilePath: mpcode_snap } = await wepy.downloadFile({ url })
        let { tempFilePath: avatar_snap } = await wepy.downloadFile({ url: avatar })
        let { tempFilePath: canvasbg_snap } = await wepy.downloadFile({ url: canvasbg })
        if (!avatar) avatar_snap = avatar_default
        if (!mpcode_snap || !avatar_snap || !canvasbg_snap) {
          this.goShareCardPage()
        } else {
          wepy.hideLoading()
          wepy.navigateTo({
            url: `/pages/shareCard/index?dw=${dw}&slogan=${slogan}&all_bouns=${all_bouns}&avatar_model=${avatar_model}&total_question=${total_question}&avatar_snap=${avatar_snap}&avatar_snap=${avatar_snap}&mpcode_snap=${mpcode_snap}&canvasbg_snap=${canvasbg_snap}`
          })
        }
      } catch (error) {
        console.log(error)
      }
    }
  }
</script>

<style lang="scss">
@import '../../scss/_element.scss';
@import '../../scss/_layout.scss';

page {
  width: 100vw;
  height: 100vh;
  position: relative;
  background: linear-gradient(to bottom right, #3023AE, #C86DD7 );

  &::after {
    content: '';
    position: absolute;
    top: 290rpx;
    right: 0;
    left: 0;
    bottom: 0;
    z-index: 9;
    background: #ededed;
  }
}

.container {
  @include horizontalCenter();
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 99;
  padding-top: 50rpx;

  .profile_card_block {
    position: relative;
    width: 650rpx;
    height: 320rpx;
    box-sizing: border-box;
    font-family: PingFangSC-medium;
    font-size: 36rpx;
    color: #4a4a4a;
    margin-bottom: 40rpx;

    &::after {
      content: '';
      position: absolute;
      left: 50%;
      bottom: 20rpx;
      margin-left: -268rpx;
      width: 536rpx;
      height: 160rpx;
      box-shadow: 0 40rpx 40rpx 0 rgba(73, 73, 73, 0.2);
      border-radius: 12rpx;
      z-index: 1;
    }

    .userInfo_block {
      @include horizontalCenter();
      position: absolute;
      top: 0;
      left: 0;
      z-index: 99;
      width: 240rpx;

      .avatar {
        width: 160rpx;
        height: 160rpx;
        border-radius: 50%;
        margin-bottom: 20rpx;
      }
    }

    .profile_block {
      @include verticalCenter();
      position: absolute;
      left: 0;
      bottom: 0;
      z-index: 9;
      width: 100%;
      height: 240rpx;
      background: #fff;
      border-radius: 24rpx;
      font-family: PingFangSC-Regular;
      font-size: 24rpx;
      color: #464f51;

      .btn {
        @include btn($width: 160rpx, $height: 60rpx);
        position: absolute;
        top: -30rpx;
        right: 40rpx;
      }

      .designation,
      .total_score {
        box-sizing: border-box;
        padding-left: 274rpx;
        margin-bottom: 20rpx;

        .unit {
          font-family: PingFangSC-Medium;
          font-size: 40rpx;
          color: #bd10e0;
        }
      }
    }
  }

  .answer_info_block {
    position: relative;
    width: 650rpx;
    height: 180rpx;
    border-radius: 12rpx;
    margin-bottom: 40rpx;

    &::after {
      content: '';
      position: absolute;
      left: 50%;
      top: 50%;
      z-index: 1;
      margin-left: -268rpx;
      margin-top: -70rpx;
      width: 536rpx;
      height: 140rpx;
      box-shadow: 0 40rpx 40rpx 0 rgba(245, 166, 35, 0.7);
      border-radius: 12rpx;
    }

    .answer_info_wrapper {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 99;
      display: flex;
      align-items: center;
      border-radius: 12rpx;
      background-image: linear-gradient(134deg,#ffd643 0%,#f7c136 54%,#ffaf00 100%);

      .answer_count_block,
      .answer_accuracy_block {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
        box-sizing: border-box;
        height: 130rpx;
        font-family: PingFangSC-Regular;
        font-size: 28rpx;
        color: #fff;

        .unit {
          font-family: DINAlternate-Bold;
          font-size: 60rpx;
        }
      }

      .answer_count_block {
        border-right: 2rpx solid #fff;
      }
    }
  }

  .answer_analysis_block {
    position: relative;
    width: 650rpx;
    height: 300rpx;
    margin-bottom: 40rpx;
    border-radius: 12rpx;

    &::after {
      content: '';
      position: absolute;
      bottom: 20rpx;
      left: 50%;
      z-index: 1;
      margin-left: -268rpx;
      width: 536rpx;
      height: 240rpx;
	    border-radius: 12rpx;
      box-shadow: 0 40rpx 40rpx 0 rgba(189, 15, 224, 0.3);
    }

    .answer_analysis_wrapper {
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      z-index: 99;
      padding-left: 50rpx;
      padding-top: 50rpx;
      border-radius: 12rpx;
      overflow: hidden;
      padding: 50rpx 0 0 50rpx;
      background-image: linear-gradient(134deg,#af0df8 0%,#e42ccb 100%,#ee32c3 100%);

      .answer_analysis_icon {
        width: 278rpx;
        height: 336rpx;
      }

      .answer_analysis_tip {
        @include horizontalCenter();
        position: absolute;
        top: 74rpx;
        right: 70rpx;
        width: 176rpx;
        font-family: PingFangSC-Semibold;
        font-size: 44rpx;
        color: #fff;

        .saying {
          font-family: PingFangSC-Thin;
          font-size: 24rpx;
        }
      }
    }
  }

  .btn {
    @include btn($width: 650rpx, $height: 70rpx, $family:PingFangSC-Regular, $size: 28rpx);
    margin-bottom: 20rpx;
  }
}
</style>
