<template lang="pug">
  scroll-view.my(scroll-y)
    view.my__profile-info
      view.profile-user
        image.avatar(src="{{userInfo.avatarUrl ? userInfo.avatarUrl : '/images/avatar-default.svg'}}")
        text.nickname {{userInfo.nickName}}
      view.profile-base
        view.profile-base__designation
          view.title
            text 级
            text 别
          text ：
          text.unit {{honor}}
        view.profile-base__total-score
          view.title
            text 总
            text 积
            text 分
          text ：
          text.unit {{total_score}}
        button.customerservice-btn(open-type="contact") 客服
        button.reserve-btn(@tap="toggleAllow") {{allow ? '允许推送': '关闭推送'}}
    view.my__answer-info
      view.answer-info__count
        view
          text 答题数：
          text.number {{answerNum}}
      view.answer-info__accuracy
        view
          text 正确率：
          text.number {{rightPercent}}%
    navigator.my__answer-analysis(url="/pages/answer-analysis-list/index")
      image.answer-analysis__icon(src="/images/answerAnalysis.svg")
      view.answer-analysis__tip
        text 查看往期答案解析
        text.saying 温故而知新
    navigator.my__common-btn(url="/pages/information/index") 认证信息
    navigator.my__common-btn(url="/pages/share/index?scence=my") 生成卡片
</template>

<script>
  import wepy from 'wepy'
  import { postAllow, getProfile } from '@/api'
  import { connect } from 'wepy-redux'

  @connect({
    honor (state) {
      return state.userData.honor
    },
    total_score (state) {
      return state.userData.score
    },
    userInfo (state) {
      return state.userData.userInfo
    }
  })
  export default class MyPage extends wepy.page {
    config = {
      navigationBarTitleText: '个人中心'
    }

    data = {
      honor: '',
      total_score: 0,
      answerNum: 0,
      rightPercent: 0,
      allow: true
    }

    async onLoad () {
      let { data: { data } } = await getProfile()
      this.initData({ honor: this.honor, total_score: this.total_score, ...data })
    }

    methods = {
      async toggleAllow () {
        let res
        let params = {
          method: 'POST',
          data: {
            allow: 0
          }
        }

        if (this.allow) {
          res = await postAllow(params)
          if (res.data.error_code) return
          this.allow = !this.allow
          this.$apply()
          wepy.showToast({
            title: '已关闭推送',
            icon: 'none'
          })
          return
        }
        params.data.allow = 1
        res = await postAllow(params)
        if (res.data.error_code) return
        this.allow = !this.allow
        this.$apply()
        wepy.showToast({
          title: '已允许推送',
          icon: 'none'
        })
      }
    }

    initData (params) {
      let { honor, total_score, answer_num, right_percent, allow } = params
      this.allow = allow
      this.answerNum = answer_num
      this.rightPercent = (right_percent * 100).toFixed(2).toString()
      this.honor = honor
      this.total_score = total_score
      this.$apply()
    }
  }
</script>

<style lang="scss">
@import '../../scss/main.scss';

page {
  position: relative;

  width: 100vw;
  height: 100vh;

  background: linear-gradient(90deg,
  #02cefd 0%,
  #1380ff 100%);

  &::after {
    content: '';
    position: absolute;
    top: to(145);
    right: 0;
    left: 0;
    bottom: 0;
    z-index: 9;

    background: #ededed;
  }
}

.my {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 99;

  padding-top: to(25);

  &__profile-info {
    position: relative;
    box-sizing: border-box;

    width: to(355);
    height: to(160);
    margin: 0 auto to(8) auto;

    font-family: PingFangSC-medium;
    font-size: to(16);
    color: #4a4a4a;

    &::after {
      content: '';
      position: absolute;
      left: 50%;
      bottom: to(10);
      z-index: -1;
      transform: translateX(-50%);

      width: to(300);
      height: to(80);
      box-shadow: 0 to(20) to(20) 0 rgba(73, 73, 73, 0.2);
      border-radius: to(6);
    }
  }

  &__answer-info {
    position: relative;
    display: flex;

    width: to(355);
    height: to(90);
    border-radius: to(6);
    margin: 0 auto to(8) auto;

    background: linear-gradient(136deg,
		#fad961 0%,
		#f66b1c 100%);

    &::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);

      height: to(65);
      border-right: 1px solid #fff;
    }

    &::after {
      content: '';
      position: absolute;
      left: 50%;
      top: 50%;
      z-index: -1;
      transform: translate(-50%, -50%);

      width: to(300);
      height: to(70);
      border-radius: to(6);
      box-shadow: 0 to(20) to(20) 0 rgba(245, 166, 35, 0.7);
    }
  }

  &__answer-analysis {
    position: relative;

    width: to(355);
    height: to(150);
    border-radius: to(6);
    margin: 0 auto to(27) auto;

    background: linear-gradient(135deg,
		#02cefd 0%,
		#1380ff 100%);

    &::after {
      content: '';
      position: absolute;
      bottom: to(10);
      left: 50%;
      z-index: -1;
      transform: translateX(-50%);

      width: to(268);
      height: to(120);
	    border-radius: to(6);
      box-shadow: 0 to(20) to(20) 0 rgba(30, 165, 251, 0.3);
    }
  }

  &__common-btn {
    display: flex;
    align-items: center;
    justify-content: center;

    width: to(355);
    height: to(35);
    border-radius: to(3);
    margin: 0 auto to(8) auto;

    font-family: PingFangSC-Regular;
    font-size: to(14);
    color: #fff;

    background: linear-gradient(90deg,
		#02cefd 0%,
		#1380ff 100%);
  }
}

.answer-info__count,
.answer-info__accuracy {
  flex: 1;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;

  font-family: PingFangSC-Regular;
  font-size: to(14);
  color: #fff;

  .number {
    font-family: DINAlternate-Bold;
    font-size: to(30);
  }
}

.answer-analysis__icon {
  width: to(140);
  height: to(125);
  margin: to(25) 0 0 to(40);
}

.answer-analysis__tip {
  position: absolute;
  top: to(37);
  right: to(50);
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  box-sizing: border-box;
  align-items: center;

  width: to(88);

  font-family: PingFangSC-Semibold;
  font-size: to(22);
  color: #fff;

  .saying {
    font-family: PingFangSC-Regular;
    font-size: to(12);
  }
}

.profile-user {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 99;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: center;
  box-sizing: border-box;

  width: to(120);

  .avatar {
    width: to(80);
    height: to(80);
    border-radius: 50%;
    margin-bottom: to(10);
  }
}

.profile-base {
  position: absolute;
  left: 0;
  bottom: 0;
  z-index: 9;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  box-sizing: border-box;

  width: inherit;
  height: to(120);
  padding-top: to(27);
  background: #fff;
  border-radius: to(3);

  font-family: PingFangSC-Regular;
  font-size: to(12);
  color: #464f51;

  &__designation,
  &__total-score {
    display: flex;
    flex-direction: row;
    align-items: center;
    box-sizing: border-box;

    margin-bottom: to(10);
    padding-left: to(194);

    .title {
      width: to(38);
      display: flex;
      justify-content: space-between;
    }

    .unit {
      font-family: PingFangSC-Medium;
      font-size: to(20);
      color: #1480ff;
    }
  }

  .reserve-btn,
  .customerservice-btn {
    position: absolute;
    top: to(-15);

    width: to(80);
    height: to(30);
    border-radius: to(20);

    font-family: PingFangSC-Medium;
    font-size: to(12);
    color: #fff;

    background: linear-gradient(90deg,
		#8af1ff 0%,
		#26b0ff 100%);
  }

  .reserve-btn {
    right: to(20);
  }

  .customerservice-btn {
    right: to(110);
  }
}
</style>
